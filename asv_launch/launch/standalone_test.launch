<?xml version="1.0"?>
<launch>
    <arg name="reconfigure" default="false"/>
    <arg name="rviz" default="false"/>
    <arg name="actuators" default="false"/>
    <arg name="sensors" default="false"/>
    <arg name="xbee" default="false"/>
    <arg name="model" default="$(find asv_launch)/urdf/asv.xacro"/>
    <arg name="rviz_config" default="$(find asv_launch)/rviz/asv.rviz"/>

    <!-- nodes to be run on local machine -->
    <group ns="asv">
        <!-- Pose Controller (inputs pose, outputs wrench commands -->
        <node name="pose_controller" pkg="asv_control" type="dynamic_positioning.py" output="screen">
            <remap from="pose_com" to="/move_base_simple/goal"/>
            <rosparam command="load" file="$(find asv_control)/params/pid_settings.yaml"/>
            <param name='frequency' value='20.0'/>
        </node>
        <!-- Control Allocator (inputs wrench_commanded, outputs tsol + control signals) -->
        <node name="thrust_map" pkg="asv_control" type="qp_allocation.py" output="screen">
            <rosparam command="load" file="$(find asv_control)/params/thrusters.yaml"/>
        </node>
        <!-- Plant Simulation (inputs achieved wrench, outputs pose + twist) -->
        <node unless="$(arg sensors)" name="nav_sim" pkg="asv_control" type="nav_sim.py" output="screen">
            <remap from="wrench" to="tau_sol"/>
            <remap from="odom" to="state"/>
            <remap from="initialpose" to="/initialpose"/>
        </node>
        <!-- robot_description parameter -->
        <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />
        <!-- Robot State Publisher -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>
        <!-- Nodes for Robot Localisation -->
        <group if="$(arg sensors)">
            <!-- Node for UM7 IMU -->
            <!-- Node for ArduIMU v3 -->
            <!-- Node for Marvelmind Indoor GPS -->
            <!-- Node for EKF Data Fusion -->
        </group>
        <!-- Arduino Communication Node for Hardware Control -->
        <node if="$(arg actuators)" name="rosserial" pkg="rosserial_python" type="serial_node.py" args="$(arg arduino)"/>
    </group>

    <!-- Dynamic Reconfiguration of PIDs -->
    <node if="$(arg reconfigure)" name="dynamic_reconfigure" pkg="rqt_gui" type="rqt_gui" args="-s reconfigure"/>
    <!-- For visualisation of vehicles -->
    <node if="$(arg rviz)" name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_config)" output="log"/>
</launch>
