#!/usr/bin/python

PACKAGE='auv_control'
NODE='twist_controller'
CONFIG='TwistController'

# not needed
# import roslib; roslib.load_manifest(PACKAGE)
from dynamic_reconfigure.parameter_generator_catkin import *
from driver_base.msg import SensorLevels

gen = ParameterGenerator()

gen.add("linear_x_Kp", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Proportional Gain", 0.0, 0.0, 1000.0)
gen.add("linear_x_Ki", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Integral Gain", 0.0, 0.0, 1000.0)
gen.add("linear_x_Kd", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Derivative Gain", 0.0, 0.0, 1000.0)

gen.add("linear_y_Kp", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Proportional Gain", 0.0, 0.0, 1000.0)
gen.add("linear_y_Ki", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Integral Gain", 0.0, 0.0, 1000.0)
gen.add("linear_y_Kd", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Derivative Gain", 0.0, 0.0, 1000.0)

gen.add("linear_z_Kp", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Proportional Gain", 0.0, 0.0, 1000.0)
gen.add("linear_z_Ki", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Integral Gain", 0.0, 0.0, 1000.0)
gen.add("linear_z_Kd", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Derivative Gain", 0.0, 0.0, 1000.0)

gen.add("angular_x_Kp", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Proportional Gain", 0.0, 0.0, 1000.0)
gen.add("angular_x_Ki", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Integral Gain", 0.0, 0.0, 1000.0)
gen.add("angular_x_Kd", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Derivative Gain", 0.0, 0.0, 1000.0)

gen.add("angular_y_Kp", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Proportional Gain", 0.0, 0.0, 1000.0)
gen.add("angular_y_Ki", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Integral Gain", 0.0, 0.0, 1000.0)
gen.add("angular_y_Kd", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Derivative Gain", 0.0, 0.0, 1000.0)

gen.add("angular_z_Kp", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Proportional Gain", 0.0, 0.0, 1000.0)
gen.add("angular_z_Ki", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Integral Gain", 0.0, 0.0, 1000.0)
gen.add("angular_z_Kd", double_t, SensorLevels.RECONFIGURE_RUNNING, "PID Derivative Gain", 0.0, 0.0, 1000.0)

exit(gen.generate(PACKAGE, NODE, CONFIG))
